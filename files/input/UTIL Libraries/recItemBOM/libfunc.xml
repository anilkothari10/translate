<?xml version="1.0" encoding="UTF-8"?><bm_lib_func><id>40840852</id><name><en><![CDATA[Vertiv Rec Item BOM]]></en><de><![CDATA[]]></de><fr><![CDATA[]]></fr><es><![CDATA[]]></es><it><![CDATA[]]></it><zh_CN><![CDATA[]]></zh_CN><zh_TW><![CDATA[]]></zh_TW><fr_CA><![CDATA[]]></fr_CA><ja_JP><![CDATA[]]></ja_JP><ko_KR><![CDATA[]]></ko_KR><pt_BR><![CDATA[]]></pt_BR><ru_RU><![CDATA[]]></ru_RU><pt_PT><![CDATA[]]></pt_PT></name><variable_name><![CDATA[recItemBOM]]></variable_name><description><en><![CDATA[]]></en><de><![CDATA[]]></de><fr><![CDATA[]]></fr><es><![CDATA[]]></es><it><![CDATA[]]></it><zh_CN><![CDATA[]]></zh_CN><zh_TW><![CDATA[]]></zh_TW><fr_CA><![CDATA[]]></fr_CA><ja_JP><![CDATA[]]></ja_JP><ko_KR><![CDATA[]]></ko_KR><pt_BR><![CDATA[]]></pt_BR><ru_RU><![CDATA[]]></ru_RU><pt_PT><![CDATA[]]></pt_PT></description><return_type>1</return_type><func_type>1</func_type><function_id>40840851</function_id><main_script_text></main_script_text><date_modified>1528272724000</date_modified><guid><![CDATA[bm_lib_func_util_recItemBOM]]></guid><folder_id>4133367</folder_id><namespace></namespace><func_override_id>-1</func_override_id><namespace_permissions>0</namespace_permissions><_children><bm_function><id>40840851</id><ref_type>16</ref_type><script_text><![CDATA[retString		= "";
selectedAttrValueDict	= selectedAttrDict;
BOMItemDict		= dict("string");
retStringDict		= dict("string");
Quanitity		= 0;

keysOfSelectAttrValDict = keys(selectedAttrValueDict);

results = bmql("Select BOMItemName, ParentBOMItemName, Qty, "
		+ "Attr1, Op1, Val1, "
		+ "Attr2, Op2, Val2 "
		+ "FROM Vertiv_InternalParts"
		+ " WHERE"
		+ " (Attr1 IN $keysOfSelectAttrValDict OR Attr1 IS NULL)"
		+ " AND (Attr2 IN $keysOfSelectAttrValDict OR Attr2 IS NULL)");
		

for eachRec in results
{
	flagCheck1		= false;
	finalFlag		= false;
	Quantity1		= 0;
	BOMItemName 		= get(eachRec, "BOMItemName");
	ParentBOMItemName	= get(eachRec, "ParentBOMItemName");
	Quantity		= atoi(get(eachRec, "Qty"));
	Attr1			= get(eachRec, "Attr1");
	Op1			= get(eachRec, "Op1");
	Val1			= get(eachRec, "Val1");
	Attr2			= get(eachRec, "Attr2");
	Op2			= get(eachRec, "Op2");
	Val2			= get(eachRec, "Val2");
	
	if(Op1 == "=")
	{
		if(get(selectedAttrValueDict, Attr1) == Val1)
		{
			flagCheck1 = true;
		}
	}
	elif(Op1 == "<>")
	{
		if(get(selectedAttrValueDict, Attr1) <> Val1)
		{
			flagCheck1 = true;
		}
	}
	if(flagCheck1 == true)
	{
		if(isnull(Attr2))
		{
			finalFlag  = true;
		}
		elif(Op2 == "=")
		{
			if(get(selectedAttrValueDict, Attr2) == Val2)
			{
				finalFlag = true;
			}
		}
		elif(Op2 == "<>")
		{
			if(get(selectedAttrValueDict, Attr2) <> Val2)
			{
				finalFlag = true;
			}
		}
	}
		
	if(finalFlag == true)
	{
		/*if(not containskey(BOMItemDict, BOMItemName))
		{
			put(BOMItemDict, BOMItemName, string(Quantity));
			Quantity1	=	Quantity;
			
		}
		else
		{
			Quantity1 = Quanitity + atoi(get(BOMItemDict, BOMItemName));
			put(BOMItemDict, BOMItemName, string(Quantity1));
			
		}*/
		retString	= retString + BOMItemName + "~" + string(Quantity) + "~" + BOMItemName + "~" + "0.0" + "|^|";
	}
}	

if(substring(retString,len(retString) - 3, len(retString)) == "|^|")
{
		retString	= substring(retString, 0, len(retString) - 3);
}
		
return retString;]]></script_text><java_class_name><![CDATA[com.bm.xchange.bmscript.bmllib.util.LibFunction_recItemBOM_1]]></java_class_name><child_class_names></child_class_names><date_modified>1528272724000</date_modified><guid><![CDATA[a70f17d3-ed97-45f0-91b5-27bfbaa33cc3]]></guid><_children></_children></bm_function><bm_lib_func_param><id>40840854</id><bm_lib_func_id>40840852</bm_lib_func_id><param_name><![CDATA[selectedAttrDict]]></param_name><ref_id>-1</ref_id><param_location>0</param_location><param_type>-1</param_type><datatype>13</datatype><date_modified>1528272724000</date_modified><order_no>1</order_no><guid><![CDATA[bm_lib_func_util_recItemBOM.bm_lib_func_param_selectedAttrDict_13]]></guid></bm_lib_func_param></_children></bm_lib_func>